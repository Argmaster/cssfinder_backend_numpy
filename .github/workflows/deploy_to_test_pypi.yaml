---
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish 📦 to Test PyPI

on:
  push:
    branches:
      - dev

jobs:
  deploy-sdist-to-test-pypi:
    if: github.repository_owner == 'Argmaster'
    name: Deploy 📦
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up Python 3.10
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install Poetry 📜
        run: pip install poetry==1.4.0

      - name: Install dependencies 🗄️
        run: poetry install --no-cache --sync

      - name: Bump Version for development 🔨 release
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version-dev.${{ github.run_number }}
        shell: bash

      - name: Build distribution 📦
        run: poetry build --format=sdist

      - name: Detect Version of project
        id: project-version
        run: |
          echo "version=$(poetry version | awk '{ print $2 }')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create development 🔨 Tag 🏷️
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.project-version.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish distribution 📦 to Test PyPI
        run: |
          pip install twine
          twine upload "dist/*" -u "__token__" -p "${{ secrets.TEST_PYPI_API_TOKEN }}" --repository-url https://test.pypi.org/legacy/

  deploy-wheel-to-test-pypi:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.8", "3.9", "3.10"]

    if: github.repository_owner == 'Argmaster'
    name: Test deploy 📦
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"

      - name: Install Poetry 📜
        run: pip install poetry==1.4.0

      - name: Install dependencies 🗄️
        run: poetry install --no-cache --sync

      - name: Bump Version for development 🔨 release
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version-dev.${{ github.run_number }}
        shell: bash

      - name: Build distribution 📦
        run: poetry build --format=wheel

      - name: Publish distribution 📦 to Test PyPI
        run: |
          pip install twine
          twine upload "dist/*" -u "__token__" -p "${{ secrets.TEST_PYPI_API_TOKEN }}" --repository-url https://test.pypi.org/legacy/
